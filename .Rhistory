log(8)
log(10)
log(16)
data <- read.csv("/Users/samf526/Dropbox/Spring_17_Stats/Class Data.csv")
data <- read.csv("/Users/stevenfelix/Dropbox/Spring_17_Stats/Class Data.csv")
head(data)
names(data)
length(data$attractive)
describe(data$attractive)
library(psych)
describe(data$attractive) # remember to install and/or load your 'psych' package
descriptives <- describe(data$attractive) # remember to install and/or load your 'psych' package
descriptives
descriptives$n
descriptives # print out all of your descriptives
descriptives$n # accesss just individual elements of your descriptives
df <- descriptives$n - 1
df
descriptives$sd
StError <- descriptives$sd / sqrt(descriptives$n)
StError
StdError
StdError <- descriptives$sd / sqrt(descriptives$n)
StdError
t <- (descriptives$mean - 50) / StdError
t
d <-  (descriptives$mean - 50) / descriptives$sd
d
t.test(data$attractive, mu = 50)
descriptives$mean
descriptives # print out all of your descriptives
browseURL("http://www.sjsu.edu/faculty/gerstman/StatPrimer/t-table.pdf")
t
tcrit <- 1.99 # based on t table, df = 80 (more conservative)
tcrit < t
t > tcrit # is our t value is greater
CIlower <- (tcrit*StdError) + descriptives$mean
CIlower <- (tcrit*StdError) - descriptives$mean
CIlower
CIlower <- descriptives$mean - (tcrit*StdError)
CIupper <- descriptives$mean + (tcrit*StdError)
CI <- c(CIlower, CIupper)
CI
# Easy method
t.test(data$attractive, mu = 50)
CI
ttest.output <- t.test(data$attractive, mu = 50)
ttest.output
ttest.output$statistic
ttest.output
ttest.output$statistic
ttest.output$parameter
ttest.output
dt(x = c(.025, .975), df = 100)
pt(x = c(.025, .975), df = 100)
pt(q = c(.025, .975), df = 100)
?dt
rt(100)
rt(100, 99)
hist(rt(100, 99))
hist(rt(100, 99))
hist(rt(1000, 99))
hist(rt(10000, 99))
plot(density(vrt(10000, 99)))
plot(density(rt(10000, 99)))
pnorm(0) =0.5
pnorm(0)
pnorm(-1.96)
pnorm(-1.961)
pnorm(-1.97)
pnorm(-1.95)
pnorm(-1.96)
pnorm(1.96)
dnorm(.025)
dnorm(-1.96)
dnorm(-1.95)
dnorm(-1.97)
dnorm(-1.96)
dnorm(c(20, 80))
dnorm(c(.20, .80))
dnorm(.2)
dnorm(0)
dnorm(1.96)
dnorm(-1.96)
qnorm(.025)
z <- -1.96
p <- .025
dnorm(z)
qnorm(p)
pnorm(z)
pnorm(1.96)
qnorm(p) # gives me the z score for a particular probability value
pt(-1.96)
pt(x = -1.96, df = 100)
pt(q = -1.96, df = 100)
qt(p = .025, df = 100)
pt(q = -1.96, df = 100)
qt(p = .02638, df = 100)
pt(q = -1.96, df = 100)
qt(p = .02638, df = 100)
sample <- rt(n = 10000, df = 100)
hist(sample)
plot(sample)
plot(density(sample))
density(sample)
plot(density(sample), main = "Density function of  10,000 random numbers")
plot(density(sample), main = "Density function of  \n10,000 random numbers")
plot(density(sample), main = "Density function of  \n10,000 random numbers \n df=100")
plot(density(sample), main = "T Density function of  \n10,000 random numbers \n df=100")
plot(density(sample), main = "t Density function of  \n10,000 random numbers \n df=100")
pnorm(z) # gives me the cumulative p value for a particular z
x <- seq(-4, 4, length=100)
x
hx <- dnorm(x)
hx
degf <- c(1, 3, 8, 30) # 4 different DFs
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright", inset=.05, title="Distributions",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
degf <- c(5, 10, 50, 100) # 4 different DFs
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
setwd('/Users/stevenfelix/Dropbox/JobSearch/DataScienceProjects/PsychologyToday/')
setwd('/Users/stevenfelix/Dropbox/DataScience/Projects/PsychologyToday/')
data <- read.table('data/psychologytoday2017-02-17.txt', sep = '\t', header = TRUE, stringsAsFactors = FALSE)
View(data)
numericVars <- c('years','fee','issuesnum','mentalhealthnum','treatmentorientationnum')
describe(data[,numericVars])
if (!require(tm)) install.packages("tm"); require(tm)
if (!require(wordcloud)) install.packages("wordcloud"); require(wordcloud)
#library(car)
library(psych)
library(effects)
#library("RSiteCatalyst")
library("RTextTools") #Loads many packages useful for text mining
describe(data[,numericVars])
op = par(mfrow = c(3,2))
for(i in numericVars){
hist(data[,c(i)], main = paste(i))
}
par(op)
data <- data[data$title != 'treatment facility',]
names(data)
numericVars <- c('years','fee','issuesnum','mentalhealthnum','treatmentorientationnum')
describe(data[,numericVars])
for(i in numericVars){
hist(data[,c(i)], main = paste(i), freq = FALSE)
}
op = par(mfrow = c(3,2))
for(i in numericVars){
hist(data[,c(i)], main = paste(i), freq = FALSE)
}
par(op)
## numbre of issues and tratment orientation strongly skewed right
describe(data$treatmentorientationnum)
quantile(data$treatmentorientationnum, probs = c(.25,.75), na.rm = TRUE)
pairs(~years+fee+issuesnum+treatmentorientationnum,data=data,
main="Simple Scatterplot Matrix")
corr.test(data[,numericVars])
corr.test(data[,numericVars])
mod <_ lm(issuesnum ~ treatmentorientationnum, data = data)
mod <- lm(issuesnum ~ treatmentorientationnum, data = data)
summary(mod)
plot(issuesnum ~ treatmentorientationnum, data = data)
mod$coefficients
abline(a = mod$coefficients[1], b = mod$coefficients[2])
mod <- lm(fee ~ treatmentorientationnum, data = data)
summary(mod)
mod <- lm(issuesnum ~ treatmentorientationnum, data = data)
summary(mod)
sample(1:10, 1)
numcol(data)
?numrows
?numrow
?num.row
?num.rows
num.rows(data)
numrows(data)
nrows(data)
nrow(data)
sample(1:nrow(data), 1)
data$profile[sample(1:nrow(data), 1)]
data$profile[sample(1:nrow(data), 1)]
data$profile[sample(1:nrow(data), 1)]
data$profile[sample(1:nrow(data), 1)]
data$profile[sample(1:nrow(data), 1)]
data <- data[data$title != 'treatment facility',]
data$profile[sample(1:nrow(data), 1)]
data$name[sample(1:nrow(data), 1)]
data[sample(1:nrow(data), 1), c('name','degree','title')]
names(data)
data[sample(1:nrow(data), 1), c('name','degrees','title')]
data[sample(1:nrow(data), 1), c('name','degrees','title','city')]
data[sample(1:nrow(data), 1), c('name','degrees','title','city')]
data[sample(1:nrow(data), 5), c('name','degrees','title','city')]
data[sample(1:nrow(data), 5), c('name','degrees','title','city')]
